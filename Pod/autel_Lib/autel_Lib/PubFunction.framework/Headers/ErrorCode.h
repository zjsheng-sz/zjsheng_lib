#ifndef ERRORCODE_H_HEADER_INCLUDED_B980E8A1
#define ERRORCODE_H_HEADER_INCLUDED_B980E8A1
#include "adsStd.h"

/******************************************************************************

    Copyright (c) 2007, AUTEL Ltd,.Co

    All rights reserved.

    文件名称：ErrorCode.h ErrorCode.cpp

    档 标 识：《MaxScan详细设计说明书》

    摘    要：错误代码处理类，存贮最后一次错误的代码值

    用    途：


    历史记录：
    ---------------------------------------------------------------------------
     时     间    作者    版本号      操    作    内    容
    ---------------------------------------------------------------------------
     2007.6.25    王长喜  1.0         创建此类
     2007.6.25    王长喜  1.0         编写代码
     2007.6.29    王长喜  1.0         修改定义，并在PC下编译通过

*******************************************************************************/
class CErrorCode
{
  public:

/*
    EC_SUCCESS         -- 成功
    EC_TIME_OVER       -- 超时
    EC_ALLOCATE_MEMORY -- 内存分配不成功
    EC_PARAMETER       -- 函数调用参数非法
    EC_NONE_SYSTEM     -- 扫描系统不存在
    EC_RUN_SET         -- 系统执行设定错，即不存在执行当前操作的前提条件
    EC_DATA            -- 数据错误
    EC_SLOP_OVER       -- 下标越界
*/
    enum tagERROR_CODE {
        // 成功
        EC_SUCCESS = 0,
        // 超时
        EC_TIME_OVER = -1,
        // 内存分配不成功
        EC_ALLOCATE_MEMORY = -2,
        // 函数调用参数非法
        EC_PARAMETER = -3,
        // 扫描系统不存在
        EC_NONE_SYSTEM = -4,
        // 系统执行设定错，即不存在执行当前操作的前提条件
        EC_RUN_SET = -5,
        // 数据错误
        EC_DATA = -6,
        // 下标越界
        EC_SLOP_OVER = -7,
        // 系统资源错误(除内存外的所有系统资源)
        EC_SYS_RESOURCE = -8,
        // 通讯错误
        EC_COMMUNICATION = -9,
        // ECU否定回答
        EC_ECU_REFUSE = -10,
        // 接收长度错误
        EC_RECEIVE_LEN = -11,
        // 包超时
        EC_PACKET_TIME_OVER = -12
    };

    /*-----------------------------------------------------------------------------
      功    能：是否存在错误
      参数说明：无
      返 回 值：存在返回true, 不存在错误--false
      说    明：无
    -----------------------------------------------------------------------------*/
    __RAMFUNC __ARM static bool Unsuccess();

    /*-----------------------------------------------------------------------------
      功    能：设置错误代码
      参数说明：W_ErrorCode  iErrorCode -- 错误代码，必须使用本类中的枚举值
      返 回 值：出错返回true, 成功--false
      说    明：无
    -----------------------------------------------------------------------------*/
    __RAMFUNC __ARM static bool SetLastError(W_ErrorCode iErrorCode);

    /*-----------------------------------------------------------------------------
      功    能：取得错误代码
      参数说明：无
      返 回 值：错误代码
      说    明：无
    -----------------------------------------------------------------------------*/
    __RAMFUNC __ARM static W_ErrorCode GetLastError();

    /*-----------------------------------------------------------------------------
      功    能：清除错误代码
      参数说明：无
      返 回 值：无
      说    明：无
    -----------------------------------------------------------------------------*/
    static void Clear();

    /*-----------------------------------------------------------------------------
      功    能：判断是否为某种错误类型
      参数说明：W_ErrorCode  iErrorCode -- 错误代码
      返 回 值：是 -- true,  否 -- false
      说    明：无
    -----------------------------------------------------------------------------*/
    static bool IsType(W_ErrorCode iErrorCode);

    friend class CLinkVpw;
  public:
    // 错误代码值
    static W_ErrorCode m_iErrorCode;

};

#endif /* ERRORCODE_H_HEADER_INCLUDED_B980E8A1 */
