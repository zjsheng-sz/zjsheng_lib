// FileEx.h: interface for the CFileEx class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_READONLYFILE_H__5C8DB68D_089E_4E40_9F05_65C2083313C2__INCLUDED_)
#define AFX_READONLYFILE_H__5C8DB68D_089E_4E40_9F05_65C2083313C2__INCLUDED_

#include <string>
using namespace std;

#include "pubmarc.h"

class ReadOnlyFileInterface;

class __MYEXPORT__  CReadOnlyFileEx
{
public:
	/************************************************************************
	*  功  能：默认构造函数，必须再次调用Open之后才能读取    
	*  参  数：无
	*  返回值：无
	************************************************************************/
	CReadOnlyFileEx();

	/************************************************************************
	*  功  能：构造函数，文件已经自动打开，可以直接读取 、
	*  参  数：strFileAbsolutenessPath	待打开文件绝对路径
			   nOpenFlags				将被忽略
	*  返回值：成功返回true，否则返回false
	************************************************************************/
	CReadOnlyFileEx(string const& strFileAbsolutenessPath, unsigned int);
	
	/************************************************************************
	*  功  能：虚构函数，如果文件已经打开，虚构时会自动关闭  
	*  参  数：无
	*  返回值：无
	************************************************************************/
	~CReadOnlyFileEx();

private:
	/************************************************************************
	*  禁用拷贝构造函数和赋值操作符                                                                 
	************************************************************************/
	CReadOnlyFileEx(CReadOnlyFileEx const&);
	CReadOnlyFileEx const& operator=(CReadOnlyFileEx const&);

public:
	/************************************************************************
	*  功  能：打开文件，如果之前已经打开过文件，会关闭之前文件之后再打开新的文件
	*  参  数：strFileAbsolutenessPath	待打开文件绝对路径
			   nOpenFlags				将被忽略
	*  返回值：成功返回true，否则返回false
	************************************************************************/
	bool Open(string const& strFileAbsolutenessPath, unsigned int);

	/************************************************************************
	*  功  能：读取文件内容。必须打开文件之后才能调用
	*  参  数：pBuf   目标缓冲区。有使用者申请内存，作为输出参数输出
			   nCount 需要读取的字节数
	*  返回值：失败返回-1，否则返回实际读取到的字节数（<= nCount）
	************************************************************************/
	int Read(void* pBuf, unsigned int nCount);

	/************************************************************************
	*  功  能：关闭文件。如果文件未打开，不做任何操作
	*  参  数：无
	*  返回值：无
	************************************************************************/
	void Close();
	
	enum SeekPosition { begin = 0x0, current = 0x1, end = 0x2 };
	
	/************************************************************************
	*  功  能：调整当前读取位置。必须打开文件之后才能调用
	*  参  数：lOff		调整的相对位置
			   uFrom	SeekPosition的三个值之一，表明相对于文件头、文件尾还是当前位置进行调整
	*  返回值：返回调整之后当前读取位置
	************************************************************************/
	long Seek(long lOff, unsigned int uFrom);

	/************************************************************************
	*  功  能：调整当前读取位置到文件头。必须打开文件之后才能调用
	*  参  数：无
	*  返回值：无
	************************************************************************/
	void SeekToBegin();

	/************************************************************************
	*  功  能：调整当前读取位置到文件尾。必须打开文件之后才能调用
	*  参  数：无
	*  返回值：无
	************************************************************************/
	void SeekToEnd();

	/************************************************************************
	*  功  能：获取当前读取位置。必须打开文件之后才能调用
	*  参  数：无
	*  返回值：返回当前读取位置。如果文件不存在或者文件未打开，则返回-1
	************************************************************************/
	long GetPosition() const;

	/************************************************************************
	*  功  能：获取文件长度。必须打开文件之后才能调用
	*  参  数：无
	*  返回值：返回文件长度。如果文件不存在或者文件未打开，则返回-1
	************************************************************************/
	long GetLength() const;

	/************************************************************************
	*  功  能：获取文件打开情况
	*  参  数：无
	*  返回值：如果文件已经打开，返回true，否则返回false
	************************************************************************/
	bool IsOpenFile() const;

	/************************************************************************
	*  功 能：文件是否存在
	*  参 数：strFileName 文件名称
	*  返回值：存在返回true，否则返回false
	************************************************************************/

	bool static IsFileExist(string const& strFileName);
private:
	ReadOnlyFileInterface* m_pImp;
};

#endif // !defined(AFX_FILEEX_H__5C8DB68D_089E_4E40_9F05_65C2083313C2__INCLUDED_)
